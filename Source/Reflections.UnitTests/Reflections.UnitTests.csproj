<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\NUnit.3.11.0\build\NUnit.props" Condition="Exists('..\packages\NUnit.3.11.0\build\NUnit.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{C93B2D50-7E03-476A-8669-8063A22462A5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Reflections.UnitTests</RootNamespace>
    <AssemblyName>Reflections.UnitTests</AssemblyName>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>..\StrongNameKey.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="FluentAssertions, Version=5.6.0.0, Culture=neutral, PublicKeyToken=33f2691a05b67b6a, processorArchitecture=MSIL">
      <HintPath>..\packages\FluentAssertions.5.6.0\lib\net45\FluentAssertions.dll</HintPath>
    </Reference>
    <Reference Include="nunit.framework, Version=3.11.0.0, Culture=neutral, PublicKeyToken=2638cd05610744eb, processorArchitecture=MSIL">
      <HintPath>..\packages\NUnit.3.11.0\lib\net45\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>..\packages\System.ValueTuple.4.5.0\lib\netstandard1.0\System.ValueTuple.dll</HintPath>
    </Reference>
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\AssemblyVersionInfo.cs">
      <Link>Properties\AssemblyVersionInfo.cs</Link>
    </Compile>
    <Compile Include="AssemblyAttributes.cs" />
    <Compile Include="GetAssemblyTypesTests.cs" />
    <Compile Include="GetAttributesTests.cs" />
    <Compile Include="GetAttributeTests.cs" />
    <Compile Include="HasAttributeTests.cs" />
    <Compile Include="IsAutoGeneratedTests.cs" />
    <Compile Include="IsInheritedTests.cs" />
    <Compile Include="IsOfTypeTests.cs" />
    <Compile Include="IsOverrideTests.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="TestClasses\ClassWithSeveralDummyAttributes.cs" />
    <Compile Include="TestClasses\DummyWithMultipleAllowedAttribute.cs" />
    <Compile Include="TestClasses\BaseClass.cs" />
    <Compile Include="TestClasses\ClassWithOneVirtualAttributedMethod.cs" />
    <Compile Include="TestClasses\AbstractClassWithOneAbstractMethod.cs" />
    <Compile Include="TestClasses\ClassWithOneBackedProperty.cs" />
    <Compile Include="TestClasses\ClassOverridingOneVirtualAttributedMethod.cs" />
    <Compile Include="TestClasses\ClassWithOneMethod.cs" />
    <Compile Include="TestClasses\ClassInheritingOneMethod.cs" />
    <Compile Include="TestClasses\ClassOverridingOneAbstractMethod.cs" />
    <Compile Include="TestClasses\ClassOverridingOneVirtualMethod.cs" />
    <Compile Include="TestClasses\ClassWithOneAutoProperty.cs" />
    <Compile Include="TestClasses\ClassWithOneVirtualMethod.cs" />
    <Compile Include="TestClasses\DerivedClass.cs" />
    <Compile Include="TestClasses\DummyAttribute.cs" />
    <Compile Include="TestClasses\UnrelatedClassOne.cs" />
    <Compile Include="TestClasses\UnrelatedClassTwo.cs" />
    <Compile Include="TestClasses\UnusedDummyAttribute.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\StrongNameKey.snk">
      <Link>StrongNameKey.snk</Link>
    </None>
    <None Include="app.config" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Reflections\Reflections.csproj">
      <Project>{47302aae-6e9d-4ffa-a2f7-2ea0551c1899}</Project>
      <Name>Reflections</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
    <Error Condition="!Exists('..\packages\NUnit.3.11.0\build\NUnit.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\NUnit.3.11.0\build\NUnit.props'))" />
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>